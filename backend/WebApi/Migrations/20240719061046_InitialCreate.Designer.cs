// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApi.Data;

#nullable disable

namespace WebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240719061046_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApi.Models.Assignment", b =>
                {
                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("dueDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("startDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("uuid");

                    b.ToTable("Assignments");

                    b.HasData(
                        new
                        {
                            uuid = new Guid("119c7f18-bb17-4eaa-99ac-272916db5b43"),
                            Name = "Murtenstrasse 5",
                            dueDate = new DateTime(2024, 6, 30, 23, 59, 59, 0, DateTimeKind.Utc),
                            startDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            uuid = new Guid("19eebcc1-0d83-4ee7-af6e-8f2aa539311f"),
                            Name = "Schanzenweg 8",
                            dueDate = new DateTime(2024, 12, 31, 23, 59, 59, 0, DateTimeKind.Utc),
                            startDate = new DateTime(2024, 7, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            uuid = new Guid("f2861230-88c0-4677-a7ca-96197ec62344"),
                            Name = "Könizstrasse 12",
                            dueDate = new DateTime(2024, 8, 31, 23, 59, 59, 0, DateTimeKind.Utc),
                            startDate = new DateTime(2024, 3, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("WebApi.Models.Employee", b =>
                {
                    b.Property<Guid>("uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("uuid");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            uuid = new Guid("57be1f8f-f483-423f-9821-2b380fc3ab45"),
                            Age = 30,
                            FirstName = "John",
                            LastName = "Doe"
                        },
                        new
                        {
                            uuid = new Guid("bc134cd6-9f96-4cb0-b053-f3ca56160f1f"),
                            Age = 25,
                            FirstName = "Anna",
                            LastName = "Karelia"
                        },
                        new
                        {
                            uuid = new Guid("5fc099aa-42cc-412a-a8d3-a06914a9e7d1"),
                            Age = 40,
                            FirstName = "Michael",
                            LastName = "Smith"
                        },
                        new
                        {
                            uuid = new Guid("cc6b6b10-12ef-41b5-ad18-72e5fb671714"),
                            Age = 35,
                            FirstName = "Emily",
                            LastName = "Jones"
                        },
                        new
                        {
                            uuid = new Guid("3abb9fc0-4343-4426-bdc1-d2c103914df3"),
                            Age = 29,
                            FirstName = "James",
                            LastName = "Brown"
                        },
                        new
                        {
                            uuid = new Guid("adc24da7-6fdb-4aa0-8551-87b453afb62f"),
                            Age = 32,
                            FirstName = "Olivia",
                            LastName = "Johnson"
                        },
                        new
                        {
                            uuid = new Guid("4d9b98ea-a12b-4b59-a230-682346c34d7b"),
                            Age = 28,
                            FirstName = "William",
                            LastName = "Williams"
                        },
                        new
                        {
                            uuid = new Guid("075820e6-e72d-464b-bd3f-78f006e8adea"),
                            Age = 27,
                            FirstName = "Sophia",
                            LastName = "Davis"
                        },
                        new
                        {
                            uuid = new Guid("ace76463-1fad-4d80-b083-e00b0fe04eac"),
                            Age = 31,
                            FirstName = "Liam",
                            LastName = "Miller"
                        },
                        new
                        {
                            uuid = new Guid("d29c17f5-6232-4042-8d5f-7c8994711a8b"),
                            Age = 26,
                            FirstName = "Ava",
                            LastName = "Wilson"
                        });
                });

            modelBuilder.Entity("WebApi.Models.EmployeeAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AssignmentUuid")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EmployeeUuid")
                        .HasColumnType("uuid");

                    b.Property<float>("HoursWorked")
                        .HasColumnType("real");

                    b.Property<DateTime>("RecordedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentUuid");

                    b.HasIndex("EmployeeUuid");

                    b.ToTable("EmployeeAssignments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssignmentUuid = new Guid("119c7f18-bb17-4eaa-99ac-272916db5b43"),
                            EmployeeUuid = new Guid("57be1f8f-f483-423f-9821-2b380fc3ab45"),
                            HoursWorked = 40f,
                            RecordedAt = new DateTime(2024, 1, 15, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 2,
                            AssignmentUuid = new Guid("119c7f18-bb17-4eaa-99ac-272916db5b43"),
                            EmployeeUuid = new Guid("bc134cd6-9f96-4cb0-b053-f3ca56160f1f"),
                            HoursWorked = 35f,
                            RecordedAt = new DateTime(2024, 1, 16, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 3,
                            AssignmentUuid = new Guid("119c7f18-bb17-4eaa-99ac-272916db5b43"),
                            EmployeeUuid = new Guid("5fc099aa-42cc-412a-a8d3-a06914a9e7d1"),
                            HoursWorked = 30f,
                            RecordedAt = new DateTime(2024, 1, 17, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 4,
                            AssignmentUuid = new Guid("19eebcc1-0d83-4ee7-af6e-8f2aa539311f"),
                            EmployeeUuid = new Guid("cc6b6b10-12ef-41b5-ad18-72e5fb671714"),
                            HoursWorked = 45f,
                            RecordedAt = new DateTime(2024, 7, 10, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 5,
                            AssignmentUuid = new Guid("19eebcc1-0d83-4ee7-af6e-8f2aa539311f"),
                            EmployeeUuid = new Guid("3abb9fc0-4343-4426-bdc1-d2c103914df3"),
                            HoursWorked = 50f,
                            RecordedAt = new DateTime(2024, 7, 15, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 6,
                            AssignmentUuid = new Guid("19eebcc1-0d83-4ee7-af6e-8f2aa539311f"),
                            EmployeeUuid = new Guid("adc24da7-6fdb-4aa0-8551-87b453afb62f"),
                            HoursWorked = 20f,
                            RecordedAt = new DateTime(2024, 7, 20, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 7,
                            AssignmentUuid = new Guid("f2861230-88c0-4677-a7ca-96197ec62344"),
                            EmployeeUuid = new Guid("4d9b98ea-a12b-4b59-a230-682346c34d7b"),
                            HoursWorked = 25f,
                            RecordedAt = new DateTime(2024, 3, 15, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 8,
                            AssignmentUuid = new Guid("f2861230-88c0-4677-a7ca-96197ec62344"),
                            EmployeeUuid = new Guid("075820e6-e72d-464b-bd3f-78f006e8adea"),
                            HoursWorked = 30f,
                            RecordedAt = new DateTime(2024, 3, 20, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 9,
                            AssignmentUuid = new Guid("f2861230-88c0-4677-a7ca-96197ec62344"),
                            EmployeeUuid = new Guid("ace76463-1fad-4d80-b083-e00b0fe04eac"),
                            HoursWorked = 40f,
                            RecordedAt = new DateTime(2024, 3, 25, 12, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            Id = 10,
                            AssignmentUuid = new Guid("f2861230-88c0-4677-a7ca-96197ec62344"),
                            EmployeeUuid = new Guid("d29c17f5-6232-4042-8d5f-7c8994711a8b"),
                            HoursWorked = 15f,
                            RecordedAt = new DateTime(2024, 3, 30, 12, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("WebApi.Models.EmployeeAssignment", b =>
                {
                    b.HasOne("WebApi.Models.Assignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApi.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeUuid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
